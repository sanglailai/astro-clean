---
import { LOCALE } from "@/constants";

export interface Props {
  pubDatetime: string | Date;
  modDatetime: string | Date | undefined | null;
  size?: "sm" | "lg";
  class?: string;
}

const {
  pubDatetime,
  modDatetime,
  size = "sm",
  class: className = "",
} = Astro.props;

/* ========== Formatted Datetime ========== */
const myDatetime = new Date(
  modDatetime && modDatetime > pubDatetime ? modDatetime : pubDatetime
);
const date = myDatetime.toLocaleDateString(LOCALE.langTag, {
  year: "numeric",
  month: "short",
  day: "numeric",
});

const time = myDatetime.toLocaleTimeString(LOCALE.langTag, {
  hour: "2-digit",
  minute: "2-digit",
});
---

<div class:list={["flex items-end space-x-2 opacity-80", className]}>
  <IconCalendar
    class:list={[
      "inline-block size-6 min-w-[1.375rem]",
      { "scale-90": size === "sm" },
    ]}
  />
  {
    modDatetime && modDatetime > pubDatetime ? (
      <span
        class={`italic ${size === "sm" ? "text-sm" : "text-sm sm:text-base"}`}
      >
        Updated:
      </span>
    ) : (
      <span class="sr-only">Published:</span>
    )
  }
  <span class={`italic ${size === "sm" ? "text-sm" : "text-sm sm:text-base"}`}>
    <time datetime={myDatetime.toISOString()}>{date}</time>
    <span aria-hidden="true"> | </span>
    <span class="sr-only">&nbsp;at&nbsp;</span>
    <span class="text-nowrap">{time}</span>
  </span>
</div>
